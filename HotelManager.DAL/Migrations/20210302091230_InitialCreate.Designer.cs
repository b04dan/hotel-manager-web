// <auto-generated />
using System;
using HotelManager.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelManager.DAL.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20210302091230_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelManager.DAL.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("FloorCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Residence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("HotelRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HotelRoomId");

                    b.ToTable("Residences");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.WeeklySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Friday")
                        .HasColumnType("int");

                    b.Property<int?>("Monday")
                        .HasColumnType("int");

                    b.Property<int?>("Saturday")
                        .HasColumnType("int");

                    b.Property<int?>("Sunday")
                        .HasColumnType("int");

                    b.Property<int?>("Thursday")
                        .HasColumnType("int");

                    b.Property<int?>("Tuesday")
                        .HasColumnType("int");

                    b.Property<int?>("Wednesday")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId")
                        .IsUnique();

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Client", b =>
                {
                    b.HasBaseType("HotelManager.DAL.Entities.Person");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Worker", b =>
                {
                    b.HasBaseType("HotelManager.DAL.Entities.Person");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<double>("WorkdaySalary")
                        .HasColumnType("float");

                    b.Property<bool>("Working")
                        .HasColumnType("bit");

                    b.HasIndex("HotelId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.HotelRoom", b =>
                {
                    b.HasOne("HotelManager.DAL.Entities.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Residence", b =>
                {
                    b.HasOne("HotelManager.DAL.Entities.Client", "Client")
                        .WithMany("Residences")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManager.DAL.Entities.HotelRoom", "HotelRoom")
                        .WithMany("Residences")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.WeeklySchedule", b =>
                {
                    b.HasOne("HotelManager.DAL.Entities.Worker", "Worker")
                        .WithOne("WeeklySchedule")
                        .HasForeignKey("HotelManager.DAL.Entities.WeeklySchedule", "WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Client", b =>
                {
                    b.HasOne("HotelManager.DAL.Entities.Person", null)
                        .WithOne()
                        .HasForeignKey("HotelManager.DAL.Entities.Client", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Worker", b =>
                {
                    b.HasOne("HotelManager.DAL.Entities.Hotel", "Hotel")
                        .WithMany("Workers")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManager.DAL.Entities.Person", null)
                        .WithOne()
                        .HasForeignKey("HotelManager.DAL.Entities.Worker", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Hotel", b =>
                {
                    b.Navigation("HotelRooms");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.HotelRoom", b =>
                {
                    b.Navigation("Residences");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Client", b =>
                {
                    b.Navigation("Residences");
                });

            modelBuilder.Entity("HotelManager.DAL.Entities.Worker", b =>
                {
                    b.Navigation("WeeklySchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
